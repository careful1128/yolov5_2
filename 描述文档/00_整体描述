一，编写test_detect.py文件
     Note：如果采用github上下载源码的操作或者本地代码的执行方式的话，注意requirements.txt里面的内容（会检查）-->可以把这个文件改名或者删除或者内容注释

二.项目结构讲解
    文件夹:
        classify:负责分类模型
        data：数据定义
        models：模型相关代码文件夹
        runs：默认运行输出文件
        utils：工具相关的代码文件
    文件：
        detect.py：目标检测的应用代码
        export.py:将pytorch模型转化成其他结构的代码
        hubconf.py：针对torch.hub.load API开发的入口代码，内部包含了模型构建相关，恢复相关的代码
        train.py：训练入口代码
        val.py：校验评估入口代码
        models/*.yaml:模型结构参数配置文件，运行的时候通过参数：“--cfg”给定（做迁移要给定）

三.模型训练
     1.c直接运行train.py
     默认情况下会下载coco128数据集放到当前项目文件夹所在的dataset文件夹中
     默认情况下会下载yolo5s.pt模型文件放到当前项目文件夹中
        修改以下内容：
           a.添加gc以及内存，显卡相关的注释代码
           b.修改参数内容（给定epoch的次数，给定路径）
           c.如果机器内存小（修改batch_size为4或者8）
        运行之后就可以在对应输出路径中查看结果信息
        NOTE：如果运行的时候出现内存相关的异常，可以考虑下面相关的调整的方式：
            1.调整batch_size的参数大小，从16改成8或者4
            2.添加gc以及内存，显卡相关的释放代码
            3.调整一下worker参数（控制数据加载的并行度8改为2）
            4.yolov5代码默认的测试数据集的加载并行度是worker*2，改成workers即可。
            5.修改dataloaders.py的147行，将参数pin_memory更改为False
四.train.py代码解析
    方法功能说明：
        train：训练的核心代码
        parse_opt：获取运行入参
        main：主入口函数

    调用链路：
